[{"C:\\Users\\Ming Hui\\Documents\\University\\CS3219\\my-app\\src\\index.js":"1","C:\\Users\\Ming Hui\\Documents\\University\\CS3219\\my-app\\src\\reportWebVitals.js":"2","C:\\Users\\Ming Hui\\Documents\\University\\CS3219\\my-app\\src\\App.js":"3"},{"size":500,"mtime":499162500000,"results":"4","hashOfConfig":"5"},{"size":362,"mtime":499162500000,"results":"6","hashOfConfig":"5"},{"size":6927,"mtime":1634504583844,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"nsfao6",{"filePath":"11","messages":"12","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},{"filePath":"13","messages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15"},"C:\\Users\\Ming Hui\\Documents\\University\\CS3219\\my-app\\src\\index.js",[],["16","17"],"C:\\Users\\Ming Hui\\Documents\\University\\CS3219\\my-app\\src\\reportWebVitals.js",[],"C:\\Users\\Ming Hui\\Documents\\University\\CS3219\\my-app\\src\\App.js",["18","19","20","21","22"],"import React from \"react\";\nimport './App.css';\n\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\nimport {Button} from '@material-ui/core';\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TextField from \"@material-ui/core/TextField\"\nimport Paper from \"@material-ui/core/Paper\";\nimport DeleteIcon from \"@material-ui/icons/Delete\"\nimport EditIcon from '@material-ui/icons/Edit';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport { DialogTitle } from \"@material-ui/core\";\nimport { DialogContent } from \"@material-ui/core\";\nimport { DialogContentText } from \"@material-ui/core\";\nimport { DialogActions } from \"@material-ui/core\";\nimport Box from '@material-ui/core/Box';\n\nimport { createTheme } from '@material-ui/core/styles';\n\nconst customtheme = createTheme({\n  palette: {\n    secondary: {\n      light: '#efefef',\n      main: '#d32f2f',\n      dark: '#d3d3d3',\n      contrastText: '#000',\n    },\n  },\n});\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: theme.palette.primary.dark,\n    color: theme.palette.common.white,\n\tfontSize:16\n  },\n  body: {\n    fontSize: 14,\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: customtheme.palette.secondary.light,\n    },\n  },\n}))(TableRow);\n\nconst App = () => {\n  const [trainingData, setTrainingData] = useState([]);\n\n  useEffect(() => {\n\taxios.get(\"http://localhost:8080/restapi/trainings\")\n\t\t.then((response) => {\n\t\t\tsetTrainingData(response.data.data);\n\t\t})\n\t}, [])\n\n\tconst getData = () => {\n\t\taxios.get(\"http://localhost:8080/restapi/trainings\")\n\t\t\t.then((getData) => {\n\t\t\t\tsetTrainingData(getData.data.data);\n\t\t\t})\n\t}\n\n\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleSave = () => {\n    setOpen(false);\n  };\n\n  \tconst [id, setID] = useState(null);\n  \tconst [name, setName] = useState('');\n\tconst [distance, setDistance] = useState(0);\n    const [duration, setDuration] = useState(0);\n\n  const postData = () => {\n\t  if(name==\"\" || distance<=0 || duration<=0){\n\t\t  alert(\"All fields must be filled and distance/duration must be positive\");\n\t  }\n\t  else{\n\t\taxios.post(\"http://localhost:8080/restapi/trainings\", {\n\t\t\tname,\n\t\t\tdistance,\n\t\t\tduration\n\t\t})\n\t\t.then(() => {\n\t\t\tgetData();\n\t\t})\n\t\talert(\"New training successfully added\");\n\t}\n}\n\nconst setData = (data) => {\n\tlet id = data._id;\n\tlet name = data.name;\n\tlet distance = parseInt(data.distance);\n\tlet duration = parseInt(data.duration);\n\t\n\tsetID(id);\n\tsetName(name);\n\tsetDistance(distance);\n\tsetDuration(duration);\n}\n\nconst updateData = () => {\n\tconsole.log(`http://localhost:8080/restapi/trainings/${id}`);\n\tconsole.log(`id: ${id}`);\n\tif(name==\"\" || distance<=0 || duration<=0){\n\t\talert(\"All fields must be filled and distance/duration must be positive\");\n\t}\n\telse{\n\t\taxios.put(`http://localhost:8080/restapi/trainings/${id}`, {\n\t\t\tname,\n\t\t\tdistance,\n\t\t\tduration\n\t\t})\n\t\t.then(() => {\n\t\t\tgetData();\n\t\t})\n\t\talert(\"Training successfully updated\");\n\t}\n}\n\nconst onDelete = (id) => {\n\taxios.delete(`http://localhost:8080/restapi/trainings/${id}`)\n\t.then(() => {\n        getData();\n    })\n\talert(\"Training successfully deleted\");\n  }\n\n  return (\n    <div className=\"App\">\n\t\t<div className=\"App-header\">\n      <h1>Welcome to training hub</h1>\n\t  <img src=\"https://www.freeiconspng.com/thumbs/exercise-icon/exercise-icon-1.png\"className=\"App-logo\" alt=\"logo\" />\n\t  </div>\n\t  <br></br>\n\t\n\t<br></br>\n\t<TextField required id=\"name\" label=\"Name\" variant=\"outlined\" onChange={(e) => setName(e.target.value)}/>\n\t<TextField required id=\"distance\" label=\"Distance(km)\" variant=\"outlined\" type=\"number\" onChange={(e) => setDistance(e.target.value)}/>\n\t<TextField required id=\"duration\" label=\"Duration(min)\" variant=\"outlined\" type=\"number\" onChange={(e) => setDuration(e.target.value)}/>\n\t<Button color=\"primary\" variant=\"contained\" onClick={postData}> Submit </Button>\n\t<br></br>\n\t<br></br>\n\t<Dialog open={open} onClose={handleClose}>\n\t\t<DialogTitle>Fill in </DialogTitle>\n\t\t<DialogContent>\n\t\t<DialogContentText>\n\t\t\tEnter details of training:\n\t\t</DialogContentText>\n\t\t<Box\n\t\t\tcomponent=\"form\"\n\t\t\tsx={{\n\t\t\t\t'& .MuiTextField-root': { m: 2, width: '15ch' },\n\t\t\t}}\n\t\t\tnoValidate\n\t\t\tautoComplete=\"off\"\n\t\t\t>\n\t\t\t<div>\n\t\t\t\t<TextField \n\t\t\t\tid=\"name\" label=\"Name\" variant=\"outlined\" \n\t\t\t\tvalue={name} onChange={(e) => setName(e.target.value)}\n\t\t\t\t/>\n\t\t\t\t<TextField \n\t\t\t\tid=\"distance\" label=\"Distance(km)\" variant=\"outlined\" \n\t\t\t\tvalue={distance} type=\"number\" onChange={(e) => setDistance(e.target.value)}/>\n\t\t\t\t<TextField \n\t\t\t\tid=\"duration\" label=\"Duration(min)\" variant=\"outlined\" \n\t\t\t\tvalue={duration} type=\"number\" onChange={(e) => setDuration(e.target.value)}/>\n\t\t\t</div>\n\t\t\t</Box>\n\t\t</DialogContent>\n\t\t<DialogActions>\n\t\t<Button onClick={handleClose}>Cancel</Button>\n\t\t<Button onClick={()=>{handleSave();updateData()}}>Save</Button>\n\t\t</DialogActions>\n\t</Dialog>\n\n      <TableContainer component={Paper}>\n        <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n          <TableHead>\n            <StyledTableRow>\n              <StyledTableCell>Name</StyledTableCell>\n              <StyledTableCell >Distance(km)</StyledTableCell>\n\t\t\t  <StyledTableCell >Duration(min)</StyledTableCell>\n\t\t\t  <StyledTableCell ></StyledTableCell>\n\t\t\t  <StyledTableCell ></StyledTableCell>\n            </StyledTableRow>\n          </TableHead>\n          <TableBody>\n            {trainingData.map((item) => {\n                return (\n                  <StyledTableRow>\n                    <StyledTableCell>\n                      {item.name}\n                    </StyledTableCell>\n                    <StyledTableCell>\n                      {item.distance}\n                    </StyledTableCell>\n\t\t\t\t\t<StyledTableCell>\n                      {item.duration}\n                    </StyledTableCell>\n\t\t\t\t\t<StyledTableCell align='right' width='10'>\n\t\t\t\t\t\t<Button color=\"primary\" variant=\"contained\" onClick={() => {handleClickOpen();setData(item)}}>Edit</Button>\n\t\t\t\t\t</StyledTableCell>\n\t\t\t\t\t<StyledTableCell align='right' width='10'>\n\t\t\t\t\t\t<Button color=\"secondary\" variant=\"contained\" onClick={() => onDelete(item._id)}>Delete</Button>\n\t\t\t\t\t</StyledTableCell>\n                  </StyledTableRow>\n                );\n              })}\n          </TableBody>\n        </Table>\n      </TableContainer>\n\t  <br></br>\n\t  <Button color=\"primary\" variant=\"contained\" onClick={getData}>Reload</Button>\n\t  <br></br>\n\t  <br></br>\n    </div>\n  );\n};\n\nexport default App;\n",{"ruleId":"23","replacedBy":"24"},{"ruleId":"25","replacedBy":"26"},{"ruleId":"27","severity":1,"message":"28","line":6,"column":22,"nodeType":"29","messageId":"30","endLine":6,"endColumn":32},{"ruleId":"27","severity":1,"message":"31","line":16,"column":8,"nodeType":"29","messageId":"30","endLine":16,"endColumn":18},{"ruleId":"27","severity":1,"message":"32","line":17,"column":8,"nodeType":"29","messageId":"30","endLine":17,"endColumn":16},{"ruleId":"33","severity":1,"message":"34","line":96,"column":11,"nodeType":"35","messageId":"36","endLine":96,"endColumn":13},{"ruleId":"33","severity":1,"message":"34","line":127,"column":9,"nodeType":"35","messageId":"36","endLine":127,"endColumn":11},"no-native-reassign",["37"],"no-negated-in-lhs",["38"],"no-unused-vars","'makeStyles' is defined but never used.","Identifier","unusedVar","'DeleteIcon' is defined but never used.","'EditIcon' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]